<Panel ux:Class="CreateUser" Background="#18f" >

    <Router ux:Dependency="router" />
    <Rectangle ux:Class="HorizontalLine" Color="#ffffff80"  Height="1" />
    <TextInput ux:Class="WhiteTextInput" Alignment="Center" TextColor="White" Margin="10" PlaceholderColor="#ffffff80" />
    <JavaScript>
    var API_URL = require("Modules/api.js")
    var Observable = require("FuseJS/Observable");
    var Context = require("Modules/Context")
    var BusyTask = require("FuseJS/BusyTask")
    var Storage = require("FuseJS/Storage")
    var username = Observable();
    var password = Observable();
    var email = Observable();
    var errValue = Observable();
    var message = Observable();

      function goBack() {
        errValue.value = ""
        message.value = ""
        username.value=""
        password.value=""
        email.value = ""
        router.goBack()
      }

      function createUser() {
        if (!email.value || !username.value || !password.value) {
          errValue.value = "must supply all fields";
          return;
        }
        var task = new BusyTask(createBar);
        errValue.value = '';
        fetch(`${API_URL}/users`, {
          method: 'post',
          mode: 'cors',
          credentials: 'same-origin',
          headers: new Headers({'Content-Type': 'application/json'}),
          body: JSON.stringify({grant_type: "password", email: email.value,username: username.value, password: password.value})

        }).
        then(function(response) {
          if (response.ok) {
            task.done();
            return response.json()
          } else {
            throw new Error('username already exists')

          }
        }).
        then(function(data) {
          username.value=""
          password.value=""
          email.value = ""
          errValue.value = ""
          message.value = data.data[0].message
         /*
          Context.accessToken.value = data.data[0].access_token
          var storeObject = {accessToken: data.data[0].access_token}
          Storage.write(Context.SAVENAME, JSON.stringify(storeObject)).then(function(content) {
            if (content !== '') {
              Context.isLoggedIn.value = true
            }
          });
          Context.getProducts(task, Context.accessToken.value)
          router.push("home")
          */
        }).
        catch(function(error) {
          task.done();
          errValue.value = error.message
          username.value=""
          password.value=""
          email.value = ""
        })

      };
      module.exports = {goBack, errValue, message, createUser, email, username,  password}
    </JavaScript>
    <DockPanel>
      <DockPanel Dock="Top" Color="#18f" >
        <StatusBarBackground Dock="Top" />
        <Panel Height="48">
          <Text Color="White" Value="Create User" Alignment="Center" FontSize="20" />

          <Image File="../Assets/arrow.png" Alignment="Left" Clicked="{goBack}" />
        </Panel>
      </DockPanel>


      <StackPanel Alignment="Top" Margin="20" ux:Name="createBar" >
        <Text TextWrapping="Wrap" TextColor="Red" Value="{message}" Alignment="Center" />
        <Text TextWrapping="Wrap" TextColor="Red" Value="{errValue}" Alignment="Center" />
        <WhiteTextInput PlaceholderText="Username" Value="{username}" />
        <HorizontalLine />
        <WhiteTextInput PlaceholderText="Email"  Value="{email}" />
        <HorizontalLine />
        <WhiteTextInput PlaceholderText="Password" IsPassword="true" Value="{password}" />
        <HorizontalLine />
        <Panel Alignment="VerticalCenter" >
          <Rectangle Clicked="{createUser}" CornerRadius="80" Fill="#127799" Width="100" Height="40" Margin="10,50" >
            <Text TextColor="#ffffff" Alignment="Center">Sign Up</Text>
          </Rectangle>
        </Panel>
      </StackPanel>

       <WhileBusy>
      <Change loadingPanel.Opacity="1" Duration=".4" />
      <Change createBar.Opacity="0" Duration=".4" />
    </WhileBusy>
    <MyLoadingIndicator ux:Name="loadingPanel" Opacity="0" ThemeColor="#fff" />

    </DockPanel>

</Panel>
